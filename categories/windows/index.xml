<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Windows on ExitCode0</title><link>https://exitcode0.net/categories/windows/</link><description>Recent content in Windows on ExitCode0</description><generator>Hugo -- 0.126.1</generator><language>en-gb</language><lastBuildDate>Tue, 29 Dec 2020 11:36:25 +0000</lastBuildDate><atom:link href="https://exitcode0.net/categories/windows/index.xml" rel="self" type="application/rss+xml"/><item><title>How to invoke UAC in a Windows Batch script</title><link>https://exitcode0.net/posts/how-to-invoke-uac-in-a-windows-batch-script/</link><pubDate>Tue, 29 Dec 2020 11:36:25 +0000</pubDate><guid>https://exitcode0.net/posts/how-to-invoke-uac-in-a-windows-batch-script/</guid><description>Here is my quick and easy way to raise the privilage level of a Windows Batch script; allowing you to run your code at an administrator level.
This is not a new question and has been asked many times on StackOverflow forums. The best answer I was able to find was the following from dbenham:
https://stackoverflow.com/questions/1894967/how-to-request-administrator-access-inside-a-batch-file/10052222#10052222
That being said there are many ways to skin this cat, so I came up with my own method, all be it derivative.</description></item><item><title>How to check if RAM is running in ECC mode</title><link>https://exitcode0.net/posts/how-to-check-if-ram-is-running-in-ecc-mode/</link><pubDate>Sat, 30 May 2020 14:52:51 +0000</pubDate><guid>https://exitcode0.net/posts/how-to-check-if-ram-is-running-in-ecc-mode/</guid><description>Error Correcting Code (ECC) RAM is a variation of coputer memory which helps to ilimintate data curruption or ‘bit rot’, but it is not always imediately apparent if your system memory is running in ECC mode; here is a quick guide on how to check if your system memory is running in ECC mode. This guide covers Windows and Linux systems, but please ensure that if you are running either system in a virtual machine configuration that this command is ran on the host machine.</description></item><item><title>Adding WMIC command to the Windows path</title><link>https://exitcode0.net/posts/adding-wmic-command-to-the-windows-path/</link><pubDate>Sat, 30 May 2020 14:48:11 +0000</pubDate><guid>https://exitcode0.net/posts/adding-wmic-command-to-the-windows-path/</guid><description>wmic is not recognized as an internal or external command – I was quite shocked to find that a command I use on a very regular basis was not working on a fresh installation of Windows 10 1909 on my trust old ThinkPad.
I don’t want to spend hours trying to find out why this was not correct in my system path, but instead, I fixed it and spent the time sharing how to fix the problem.</description></item><item><title>Prevent Screensavers and Lock-screens with Powershell</title><link>https://exitcode0.net/posts/prevent-screensavers-and-lock-screens-with-powershell/</link><pubDate>Thu, 26 Mar 2020 10:33:06 +0000</pubDate><guid>https://exitcode0.net/posts/prevent-screensavers-and-lock-screens-with-powershell/</guid><description>There might be a number of reasons to want to prevent your windows screensavers and lock-screens from engaging and in some cases (no doubt yours if you have hit this article from a search engine) local policy on the machine preventing you from changing these settings.
Powershell lets us work around this problem and prevent the machine from locking or activating a screensaver.
Prevent Screensavers and Lock-screens The bulk of the code below has been lifted from this great write up: https://dmitrysotnikov.</description></item><item><title>Modifying Windows shortcuts is Powershell</title><link>https://exitcode0.net/posts/modifying-windows-shortcuts-is-powershell/</link><pubDate>Wed, 13 Feb 2019 09:00:15 +0000</pubDate><guid>https://exitcode0.net/posts/modifying-windows-shortcuts-is-powershell/</guid><description>I once faced a rather tedious task that involved recursively modifying a number of shortcut paths stored across a convoluted folder structure. There was approximately 100 shortcuts which needed part of their path modifying.
The answer: Create a****PowerShell script.
The following code utilises regex to check for the existence of a string and modify with the define replacement. It is easily possible to use Read-Host to make this a little bit more interactive, but the purposes of my use-case it was just as simple to modify these variables before running the script.</description></item></channel></rss>