<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Linux on ExitCode0</title><link>https://exitcode0.net/categories/linux/</link><description>Recent content in Linux on ExitCode0</description><generator>Hugo -- 0.134.3</generator><language>en-gb</language><lastBuildDate>Wed, 04 Sep 2024 12:00:00 +0000</lastBuildDate><atom:link href="https://exitcode0.net/categories/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Complete 2024 Guide: How to expand a Ubuntu LVM LV to use all space on the PV</title><link>https://exitcode0.net/posts/how-to-expand-an-lvm-lv-to-use-all-space-on-the-pv/</link><pubDate>Wed, 04 Sep 2024 12:00:00 +0000</pubDate><guid>https://exitcode0.net/posts/how-to-expand-an-lvm-lv-to-use-all-space-on-the-pv/</guid><description>&lt;p>&lt;strong>2024 Update&lt;/strong> - I found myself stuck in this situation again, my Ubuntu root partition was completely full to the brim&amp;hellip; I&amp;rsquo;m scrambling to remove apt chache and pruning and and all docker images, but then I run &lt;code>vgdisplay&lt;/code> only to reaslise that my LVM LV isn&amp;rsquo;t even using the full amount of physical disk space (this is a VM and I have just expanded the VMDK file). Thankfully I wrote this blog post 4 years ago as a how-to. Well now I am going to give this post a refresh and this includes some extra details which I needed during the panic of a full disk.&lt;/p></description></item><item><title>Debian 10 - How to upgrade python 3.7 to python 3.9</title><link>https://exitcode0.net/posts/debian-10-how-to-upgrade-python-3-7-to-python-3-9/</link><pubDate>Tue, 05 Jan 2021 21:28:32 +0000</pubDate><guid>https://exitcode0.net/posts/debian-10-how-to-upgrade-python-3-7-to-python-3-9/</guid><description>&lt;p>&lt;img loading="lazy" src="https://i2.wp.com/exitcode0.net/wp-content/uploads/2021/01/debian10-pytohn3.png?resize=217%2C206&amp;amp;ssl=1" alt="" />
I have covered this a number of times in the past and the posts have proved popular and useful to many. So, here is my guide for updating to the latest version of Python 3 (3.9) on Debian 10 Buster.&lt;/p>
&lt;p>To clarify the purpose of this guide, Debian 10 ships with Python 2 (2.7) and Python 3 (3.7) installed at my time of writing. For those wishing to upgrade from python 3.7.X to 3.8.X or 3.9.X, this is the guide for you. If you are trying to configure python 3.7 as your default interpreter when you call ‘&lt;code>python&lt;/code>‘, try this: &lt;a href="https://exitcode0.net/posts/changing-the-default-python-version-in-debian/" title="https://exitcode0.net/posts/changing-the-default-python-version-in-debian/">CHANGING THE DEFAULT PYTHON VERSION IN DEBIAN&lt;/a>. This method involves using the ‘&lt;code>update-alternatives&lt;/code>‘ command. We will be using a similar method in this guide, however this time we only do so to give 3.9.X a higher priority to 3.7.X, rather than uninstalling older versions.&lt;/p></description></item><item><title>How To call a bash command with variables in Python</title><link>https://exitcode0.net/posts/how-to-call-a-bash-command-with-variables-in-python/</link><pubDate>Mon, 28 Dec 2020 11:00:00 +0000</pubDate><guid>https://exitcode0.net/posts/how-to-call-a-bash-command-with-variables-in-python/</guid><description>&lt;p>A quick Google of the above only seemed to give me answers for the inverse, calling a python script from a bash shell and handing it variables. At least, the first 3 results showed this and I’m probably not alone when it comes to scrolling down past the StackOverflow articles.&lt;/p>
&lt;p>So I am had to go it alone and the way that I figured out how to call a bash command with variables in Python (3), is a total hack… But it works. This is commonly referred to as ‘getting the job done’ code.&lt;/p></description></item><item><title>How to check if RAM is running in ECC mode</title><link>https://exitcode0.net/posts/how-to-check-if-ram-is-running-in-ecc-mode/</link><pubDate>Sat, 30 May 2020 14:52:51 +0000</pubDate><guid>https://exitcode0.net/posts/how-to-check-if-ram-is-running-in-ecc-mode/</guid><description>&lt;p>Error Correcting Code (ECC) RAM is a variation of coputer memory which helps to ilimintate data curruption or ‘bit rot’, but it is not always imediately apparent if your system memory is running in ECC mode; here is a quick guide on how to check if your system memory is running in ECC mode. This guide covers Windows and Linux systems, but please ensure that if you are running either system in a virtual machine configuration that this command is ran on the &lt;strong>host&lt;/strong> machine.&lt;/p></description></item><item><title>How To: Raspberry Pi boot from USB</title><link>https://exitcode0.net/posts/how-to-raspberry-pi-boot-from-usb/</link><pubDate>Sat, 23 May 2020 10:31:45 +0000</pubDate><guid>https://exitcode0.net/posts/how-to-raspberry-pi-boot-from-usb/</guid><description>&lt;p>The Pi enthusiasts have been waiting for official USB boot support on the Raspberry Pi for what feels like a lifetime, but finally it is on the horizon. In this post I will explain how to make your Raspberry Pi boot from USB.&lt;/p>
&lt;p>&lt;img loading="lazy" src="https://i0.wp.com/exitcode0.net/wp-content/uploads/2020/05/pi4.jpg?resize=298%2C242&amp;amp;ssl=1" alt="Raspberry Pi boot from USB - exicode0" />
&lt;strong>WARNING&lt;/strong>: Although this is official, it is still in beta testing, so rock-solid stability is far from certain. Learn more about this beta release &lt;a href="https://www.raspberrypi.org/forums/viewtopic.php?t=274595&amp;amp;p=1663644#p1663644" title="https://www.raspberrypi.org/forums/viewtopic.php?t=274595&amp;amp;p=1663644#p1663644">here&lt;/a>.&lt;/p></description></item><item><title>How to upgrade Ubuntu from 18.04 to 20.04</title><link>https://exitcode0.net/posts/how-to-upgrade-ubuntu-from-18-04-to-20-04/</link><pubDate>Tue, 21 Apr 2020 19:54:04 +0000</pubDate><guid>https://exitcode0.net/posts/how-to-upgrade-ubuntu-from-18-04-to-20-04/</guid><description>&lt;p>&lt;a href="https://releases.ubuntu.com/20.04/" title="https://releases.ubuntu.com/20.04/">Ubuntu 20.04&lt;/a> LTS full release is almost upon, with a scheduled release date of &lt;a href="https://www.omgubuntu.co.uk/2019/10/ubuntu-20-04-release-features" title="https://www.omgubuntu.co.uk/2019/10/ubuntu-20-04-release-features">April 23rd 2020&lt;/a> (2 days as of writing this). It is packed with lots of great new features and upgrades and the Linux community is very excited to get a hold of it. If you are looking to upgrade ubuntu, there is a quick guide down below.&lt;/p>
&lt;p>If like me you are already running Ubuntu 18.04 LTS then you might be interested to learn how to upgrade your current version of the distro to 20.04 LTS.&lt;/p></description></item><item><title>Setup the Nextcloud Snap Package with HTTPS and a separate data path</title><link>https://exitcode0.net/posts/setup-the-nextcloud-snap-package-with-https-and-a-separate-data-path/</link><pubDate>Sun, 29 Mar 2020 19:54:17 +0000</pubDate><guid>https://exitcode0.net/posts/setup-the-nextcloud-snap-package-with-https-and-a-separate-data-path/</guid><description>&lt;p>&lt;a href="https://snapcraft.io/nextcloud" title="https://snapcraft.io/nextcloud">&lt;img loading="lazy" src="https://i1.wp.com/exitcode0.net/wp-content/uploads/2020/03/Nextcloud_Logo.svg_.png?resize=186%2C131" alt="Nextcloud Snap Package setup" />
&lt;/a> &lt;a href="https://snapcraft.io/nextcloud" title="https://snapcraft.io/nextcloud">https://snapcraft.io/nextcloud&lt;/a>
I have been using the Nextcloud snap package for a long time, but some recent system changes in my colocation facility mean that it is time for a big upgrade. Rather than migrate my existing Nextcloud instance, I have decided to build a new install and here are my goals for the new installation:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Use lets encrypt to have automatic and valid HTTPS certificates&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Have the data path for Nextcloud on a HDD and the rest of the host OS on an SSD&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;h2 id="host-os-details">Host OS Details&lt;/h2>
&lt;p>For this setup, I am using Ubuntu 18.04 installed on a 30GB SSD backed partition. I then have a 1TB disk attached and mounted to /media.&lt;/p></description></item><item><title>Kali Linux 2020.1 - No more root by default</title><link>https://exitcode0.net/posts/kali-linux-2020-1-no-more-root-by-default/</link><pubDate>Tue, 28 Jan 2020 22:03:00 +0000</pubDate><guid>https://exitcode0.net/posts/kali-linux-2020-1-no-more-root-by-default/</guid><description>&lt;p>&lt;a href="https://www.kali.org/" title="https://www.kali.org/">&lt;img loading="lazy" src="https://i1.wp.com/exitcode0.net/wp-content/uploads/2020/01/kali-2020.1-logo.png?resize=116%2C68&amp;amp;ssl=1" alt="Kali Linux 2020.1" />
&lt;/a>
Rejoice! Kali Linux 2020.1 is here! The first release of 2020 has arrived and this post will contain some updates and my initial thoughts on the fresh release.&lt;/p>
&lt;h2 id="kali-linux-20201-features-and-changes">Kali Linux 2020.1 features and changes&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>&lt;a href="https://www.kali.org/news/kali-default-non-root-user/" title="https://www.kali.org/news/kali-default-non-root-user/">Non-Root by default&lt;/a>&lt;/strong>&lt;/li>
&lt;li>Kali single installer image&lt;/li>
&lt;li>&lt;a href="https://www.kali.org/docs/nethunter/nethunter-rootless/" title="https://www.kali.org/docs/nethunter/nethunter-rootless/">Kali NetHunter Rootless&lt;/a>&lt;/li>
&lt;li>Improvements to theme &amp;amp; kali-undercover&lt;/li>
&lt;li>New tools&lt;/li>
&lt;/ul>
&lt;p>Full Kali release notes as per their release blog post: &lt;a href="https://www.kali.org/releases/kali-linux-2020-1-release/" title="https://www.kali.org/releases/kali-linux-2020-1-release/">https://www.kali.org/releases/kali-linux-2020-1-release/&lt;/a>&lt;/p>
&lt;h2 id="got-root">Got root?&lt;/h2>
&lt;p>Kali has installed with root as the default user since the dawn of its existence, Backtrack, WHAX and Whoppix, but finally, the devs have decided that it time to bring Kali in line with Debian on this one and have a default user which is no longer root.&lt;/p></description></item><item><title>Python 2.7 end-of-life - The time to upgrade is upon us</title><link>https://exitcode0.net/posts/python-2-7-end-of-life-the-time-to-upgrade-is-upon-us/</link><pubDate>Sun, 05 Jan 2020 02:31:04 +0000</pubDate><guid>https://exitcode0.net/posts/python-2-7-end-of-life-the-time-to-upgrade-is-upon-us/</guid><description>&lt;p>1st January 2020 marked the official end of python 2.7 development, including feature support and security fixes.&lt;/p>
&lt;p>&lt;img loading="lazy" src="https://i1.wp.com/exitcode0.net/wp-content/uploads/2019/11/Python-PNG-Clipart.png?resize=231%2C144" alt="Python 2.7 end-of-life" />
Python 2.7 was over 9 years old in development years, making it the longest supported version to date. The code freeze is no in place, with the final release – 2.7.18 – scheduled for an April 2020 release. So yes there will be one more version to come down the tubes but it’s probably best that the new python project you were thinking of starting is written in 3.7 or above.&lt;/p></description></item><item><title>Clipboard and Shared Folders on Kali Linux with VirtualBox</title><link>https://exitcode0.net/posts/clipboard-and-shared-folders-on-kali-linux-with-virtualbox/</link><pubDate>Thu, 21 Nov 2019 21:21:43 +0000</pubDate><guid>https://exitcode0.net/posts/clipboard-and-shared-folders-on-kali-linux-with-virtualbox/</guid><description>&lt;p>I spent more time that care to admit trying to setup a shared folder between my windows host and Kali VirtualBox VM. So hopefully the Google algos pick this one up and save you the time trying to find the right packages to fix this a clipboard sync.&lt;/p>
&lt;pre tabindex="0">&lt;code>apt-get update
apt-get install -y virtualbox-guest-x11
&lt;/code>&lt;/pre>&lt;p>Go for a quick reboot once the above commands are complete and you should have clipboard sync (text) and shared folders should mount successfully.&lt;/p></description></item><item><title>[SOLVED] - Running Docker on a Raspberry Pi 4</title><link>https://exitcode0.net/posts/solved-running-docker-on-a-raspberry-pi-4/</link><pubDate>Wed, 10 Jul 2019 08:26:25 +0000</pubDate><guid>https://exitcode0.net/posts/solved-running-docker-on-a-raspberry-pi-4/</guid><description>&lt;p>&lt;strong>The Raspberry Pi 4 has now been released offering up to 4GB of RAM! All of the horsepower required for an excellent lower power, docker host.&lt;/strong>&lt;/p>
&lt;p>&lt;img loading="lazy" src="https://i2.wp.com/exitcode0.net/wp-content/uploads/2019/07/Pi4-Docker.png?resize=774%2C492" alt="Pi4 Running Docker" />
However, there are currently issues undergoing work which prevent docker from running on the only Rasbian image currently available for the Pi 4 – ‘&lt;a href="https://www.raspberrypi.org/downloads/raspbian/" title="https://www.raspberrypi.org/downloads/raspbian/">Rasbian Buster&lt;/a>‘. Details of these issues can been found here on the GitHub thread – &lt;a href="https://github.com/docker/for-linux/issues/709" title="https://github.com/docker/for-linux/issues/709">https://github.com/docker/for-linux/issues/709&lt;/a>&lt;/p>
&lt;hr>
&lt;h3 id="current-working-solution">Current Working Solution&lt;/h3>
&lt;p>Fear not, for there is a simple way to fool your docker installation and successfully getting it to run on the Pi 4.&lt;/p></description></item><item><title>Debian 9 - Running a python script at boot</title><link>https://exitcode0.net/posts/debian-9-running-a-python-script-at-startup/</link><pubDate>Thu, 21 Feb 2019 18:30:32 +0000</pubDate><guid>https://exitcode0.net/posts/debian-9-running-a-python-script-at-startup/</guid><description>&lt;p>There are a number of ways that you can run a python or bash script at system start but I am about to show you possibly the easiest way, using crontab.&lt;/p>
&lt;p>First you need to make that your script is executable and can run unattended. Then you need to login as the user your wish to execute the script as and edit the crontab file:&lt;/p>
&lt;pre tabindex="0">&lt;code>crontab -e
&lt;/code>&lt;/pre>&lt;p>If this is your first time editing the crontab file, you might be asked which editor you wish to use – I chose nano.&lt;br>
Once in the crontab file add a new line at the bottom of the file; it should look something like this&lt;/p></description></item><item><title>Debian 9 - How to upgrade python 3.5 to python 3.7</title><link>https://exitcode0.net/posts/debian-9-how-to-upgrade-python-3-5-to-python-3-7/</link><pubDate>Tue, 19 Feb 2019 18:30:56 +0000</pubDate><guid>https://exitcode0.net/posts/debian-9-how-to-upgrade-python-3-5-to-python-3-7/</guid><description>&lt;p>&lt;img loading="lazy" src="https://i0.wp.com/exitcode0.net/wp-content/uploads/2019/06/Python-Upgrade.png?resize=208%2C208&amp;amp;ssl=1" alt="Python upgrade 3.5 to 3.7" />
I recently spent 30 minutes figuring out how to upgrade to python 3.7 and subsequently pip version on a fresh install of Debian 9. I ran into a number of issues doing this so I though that I would put this quick post together to make this a little bit less complicated for anyone else trying to this.&lt;/p>
&lt;p>This post relates specifically to python version 3.7.3. Although the generic commands should also apply to earlier versions, but your milage may vary.&lt;/p></description></item></channel></rss>