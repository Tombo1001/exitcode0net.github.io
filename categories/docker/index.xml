<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Docker on ExitCode0</title><link>https://exitcode0.net/categories/docker/</link><description>Recent content in Docker on ExitCode0</description><generator>Hugo -- 0.125.1</generator><language>en-gb</language><lastBuildDate>Sun, 07 Jan 2024 17:00:00 +0100</lastBuildDate><atom:link href="https://exitcode0.net/categories/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>Home Assistant HTTPS Certificates with Tailscale, Traefik and CoreDNS</title><link>https://exitcode0.net/posts/homeassistant-tls-with-tailscale-traefik/</link><pubDate>Sun, 07 Jan 2024 17:00:00 +0100</pubDate><guid>https://exitcode0.net/posts/homeassistant-tls-with-tailscale-traefik/</guid><description>In previous posts, I&amp;rsquo;ve explained how to use Tailscale&amp;rsquo;s MagicDNS and HTTPS certificate feature to generate a TLS cert for your Home Assistant install: Homeassistant Enable MagicDNS and HTTPS Certificates in Tailscale. That setup required you to reformat the TLS cert and copy it to the Home Assistant container&amp;hellip; it wouldn&amp;rsquo;t be to much of a task to automate those actions, but fortunately there is now a superior method of applying and renewing a Tailscale cert for HASS (and many other self-hosted services).</description></item><item><title>Automating Postgres Deployment with Docker Compose and Init Scripts</title><link>https://exitcode0.net/posts/automating-postgres-deployment/</link><pubDate>Sat, 06 Jan 2024 12:00:00 +0100</pubDate><guid>https://exitcode0.net/posts/automating-postgres-deployment/</guid><description>Introduction to Running PostgreSQL in a Docker Container using Docker Compose In this blog post, we will explore how to run PostgreSQL in a Docker container using Docker Compose. We will also break down and explain the init-user-db.sh script that is executed at startup to initialize the PostgreSQL tables. Running PostgreSQL in a Docker container provides several benefits, including ease of deployment, portability, and isolation. So let&amp;rsquo;s dive in and understand the process!</description></item><item><title>Honeygain docker-compose setup</title><link>https://exitcode0.net/posts/honeygain-docker-compose-setup/</link><pubDate>Thu, 04 Mar 2021 15:20:13 +0000</pubDate><guid>https://exitcode0.net/posts/honeygain-docker-compose-setup/</guid><description>So Honeygain has finally arrived as a Docker container and this article will give you everything you need to build your own docker-compose YAML file for faster deployments.
You can see the docs provided by the Honeygain devs on the matter here:
https://honeygain.zendesk.com/hc/en-us/articles/360018979919-How-to-run-Honeygain-on-Docker-Linux-
However, they do not provide a nice way to deploy time and again from a docker-compose file, scroll down for a template! At the time of writing, you are permitted to run the service on two devices per public IP.</description></item><item><title>[SOLVED] - Running Docker on a Raspberry Pi 4</title><link>https://exitcode0.net/posts/solved-running-docker-on-a-raspberry-pi-4/</link><pubDate>Wed, 10 Jul 2019 08:26:25 +0000</pubDate><guid>https://exitcode0.net/posts/solved-running-docker-on-a-raspberry-pi-4/</guid><description>The Raspberry Pi 4 has now been released offering up to 4GB of RAM! All of the horsepower required for an excellent lower power, docker host.
However, there are currently issues undergoing work which prevent docker from running on the only Rasbian image currently available for the Pi 4 – ‘Rasbian Buster‘. Details of these issues can been found here on the GitHub thread – https://github.com/docker/for-linux/issues/709
Current Working Solution Fear not, for there is a simple way to fool your docker installation and successfully getting it to run on the Pi 4.</description></item></channel></rss>