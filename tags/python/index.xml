<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Python on ExitCode0</title><link>https://exitcode0.net/tags/python/</link><description>Recent content in Python on ExitCode0</description><generator>Hugo -- 0.134.0</generator><language>en-gb</language><lastBuildDate>Tue, 19 Jan 2021 09:00:00 +0000</lastBuildDate><atom:link href="https://exitcode0.net/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Writing to an InfluxDB server with Python3</title><link>https://exitcode0.net/posts/writing-to-an-influxdb-server-with-python3/</link><pubDate>Tue, 19 Jan 2021 09:00:00 +0000</pubDate><guid>https://exitcode0.net/posts/writing-to-an-influxdb-server-with-python3/</guid><description>&lt;p>A quick GitHub gist for anyone looking to write to an InfluxDB server with Python3. This is a generic function that accepts three inputs; as an example, I am using temperature data in degrees Celsius.&lt;/p>
&lt;p>&lt;img loading="lazy" src="https://i1.wp.com/exitcode0.net/wp-content/uploads/2021/01/image-8-1024x173.png?resize=774%2C131&amp;amp;ssl=1" alt="Writing to an InfluxDB server with Python3 - DHT11 readings in grafana" />
Turning DHT11 readings into beautiful graphs in Grafana
Once you have your data in influxDB, a great way to visualise it is using &lt;a href="https://grafana.com/" title="https://grafana.com/">Grafana&lt;/a>. I hope to bring you more posts in the future about visualising your python data with Grafana.&lt;/p></description></item><item><title>Debian 10 - How to upgrade python 3.7 to python 3.9</title><link>https://exitcode0.net/posts/debian-10-how-to-upgrade-python-3-7-to-python-3-9/</link><pubDate>Tue, 05 Jan 2021 21:28:32 +0000</pubDate><guid>https://exitcode0.net/posts/debian-10-how-to-upgrade-python-3-7-to-python-3-9/</guid><description>&lt;p>&lt;img loading="lazy" src="https://i2.wp.com/exitcode0.net/wp-content/uploads/2021/01/debian10-pytohn3.png?resize=217%2C206&amp;amp;ssl=1" alt="" />
I have covered this a number of times in the past and the posts have proved popular and useful to many. So, here is my guide for updating to the latest version of Python 3 (3.9) on Debian 10 Buster.&lt;/p>
&lt;p>To clarify the purpose of this guide, Debian 10 ships with Python 2 (2.7) and Python 3 (3.7) installed at my time of writing. For those wishing to upgrade from python 3.7.X to 3.8.X or 3.9.X, this is the guide for you. If you are trying to configure python 3.7 as your default interpreter when you call ‘&lt;code>python&lt;/code>‘, try this: &lt;a href="https://exitcode0.net/posts/changing-the-default-python-version-in-debian/" title="https://exitcode0.net/posts/changing-the-default-python-version-in-debian/">CHANGING THE DEFAULT PYTHON VERSION IN DEBIAN&lt;/a>. This method involves using the ‘&lt;code>update-alternatives&lt;/code>‘ command. We will be using a similar method in this guide, however this time we only do so to give 3.9.X a higher priority to 3.7.X, rather than uninstalling older versions.&lt;/p></description></item><item><title>Calculating compound interest with Python 3</title><link>https://exitcode0.net/posts/calculating-compound-interest-with-python-3/</link><pubDate>Sun, 03 Jan 2021 21:54:45 +0000</pubDate><guid>https://exitcode0.net/posts/calculating-compound-interest-with-python-3/</guid><description>&lt;p>&lt;img loading="lazy" src="https://i0.wp.com/exitcode0.net/wp-content/uploads/2021/01/python-compound.png?resize=229%2C213&amp;amp;ssl=1" alt="Calculating compound interest with Python - exitcode 0" />
Compound stonks only go up!
I have a growing interest in finance and analytics, so it felt like a great idea to start creating my own set of financial tools with Python. This article will explain how I created a simple but effective script for calculating compound interest with Python. I wrote this in Python 3 (as all new Python projects should be from now onwards), but the library dependencies are very lightweight, making this something that could easily be re-written from Python 2.&lt;/p></description></item><item><title>How To call a bash command with variables in Python</title><link>https://exitcode0.net/posts/how-to-call-a-bash-command-with-variables-in-python/</link><pubDate>Mon, 28 Dec 2020 11:00:00 +0000</pubDate><guid>https://exitcode0.net/posts/how-to-call-a-bash-command-with-variables-in-python/</guid><description>&lt;p>A quick Google of the above only seemed to give me answers for the inverse, calling a python script from a bash shell and handing it variables. At least, the first 3 results showed this and I’m probably not alone when it comes to scrolling down past the StackOverflow articles.&lt;/p>
&lt;p>So I am had to go it alone and the way that I figured out how to call a bash command with variables in Python (3), is a total hack… But it works. This is commonly referred to as ‘getting the job done’ code.&lt;/p></description></item><item><title>How To: Python infinite loops with while true</title><link>https://exitcode0.net/posts/how-to-python-infinite-loops-with-while-true/</link><pubDate>Tue, 05 May 2020 12:00:00 +0000</pubDate><guid>https://exitcode0.net/posts/how-to-python-infinite-loops-with-while-true/</guid><description>&lt;p>Here is a quick guide on how to create an infinite loop in python using a ‘while true’ statement. There are number of reason that you might want to implement this; a great use case would be outputting a fluctuating variable to the terminal such as a temperature reading from a sensor.&lt;/p>
&lt;p>&lt;img loading="lazy" src="https://i2.wp.com/exitcode0.net/wp-content/uploads/2020/05/infinite-loops.png?resize=178%2C167&amp;amp;ssl=1" alt="Python infinite loop - exitcode0" />
loops that make your brain hurt
A ‘while true’ statement allows us to run a sequence of code until a particular condition is met. In order to make that sequence of code run in an infinite loop, we can set the condition to be one that is impossible to reach. Better still, we can simply omit the condition altogether to ensure that the while true loop never ends.&lt;/p></description></item><item><title>Python 2.7 end-of-life - The time to upgrade is upon us</title><link>https://exitcode0.net/posts/python-2-7-end-of-life-the-time-to-upgrade-is-upon-us/</link><pubDate>Sun, 05 Jan 2020 02:31:04 +0000</pubDate><guid>https://exitcode0.net/posts/python-2-7-end-of-life-the-time-to-upgrade-is-upon-us/</guid><description>&lt;p>1st January 2020 marked the official end of python 2.7 development, including feature support and security fixes.&lt;/p>
&lt;p>&lt;img loading="lazy" src="https://i1.wp.com/exitcode0.net/wp-content/uploads/2019/11/Python-PNG-Clipart.png?resize=231%2C144" alt="Python 2.7 end-of-life" />
Python 2.7 was over 9 years old in development years, making it the longest supported version to date. The code freeze is no in place, with the final release – 2.7.18 – scheduled for an April 2020 release. So yes there will be one more version to come down the tubes but it’s probably best that the new python project you were thinking of starting is written in 3.7 or above.&lt;/p></description></item><item><title>Kasa home automation with IFTTT and python webhooks</title><link>https://exitcode0.net/posts/kasa-home-automation-with-ifttt-and-python-webhooks/</link><pubDate>Wed, 04 Dec 2019 09:00:00 +0000</pubDate><guid>https://exitcode0.net/posts/kasa-home-automation-with-ifttt-and-python-webhooks/</guid><description>&lt;p>They say that the long tail page titles are best for SEO, well this one certainly should be up there with the best of them. In this post, I am going to explain how easy it is to control Kasa a HS100 / HS110 with IFTTT and python webhooks. Using this basic code, you expand into building a very powerful home automation system which fits your needs and take your Kasa home automation to the next level.&lt;/p></description></item><item><title>Getting started with Python 3 - a beginner's cheat sheet</title><link>https://exitcode0.net/posts/getting-started-with-python-3-a-beginners-cheat-sheet/</link><pubDate>Sat, 23 Nov 2019 21:13:27 +0000</pubDate><guid>https://exitcode0.net/posts/getting-started-with-python-3-a-beginners-cheat-sheet/</guid><description>&lt;p>&lt;a href="https://www.python.org/" title="https://www.python.org/">&lt;img loading="lazy" src="https://i1.wp.com/exitcode0.net/wp-content/uploads/2019/11/Python-PNG-Clipart.png?resize=187%2C117" alt="Python Logo" />
&lt;/a>Python.Org
I have been getting started with python 3 – I want to make this my primary scripting language. One way I like to assist myself whilst I learn the rope is to maintain a crib sheet filled with all the trivial things I would otherwise forget.&lt;/p>
&lt;h2 id="python-3-cheat-sheet">Python 3 Cheat Sheet&lt;/h2>
&lt;pre tabindex="0">&lt;code>
#Define Variables
programming_languages: &amp;#34;Python&amp;#34;, &amp;#34;VB&amp;#34;, &amp;#34;C++&amp;#34;, &amp;#34;C#&amp;#34;
#Print Variables
print(programming_languages)
print(&amp;#39;--------------------&amp;#39;)
#Basic for loop + variables
for language in programming_languages:
print(language)
print(&amp;#39;--------------------&amp;#39;)
#Basic Function
def FuncExample():
i: 1
for language in programming_languages:
#Concatinate Strings and Integers in print statements
print(&amp;#34;Language &amp;#34; + str(i) + &amp;#34;:&amp;#34; + language)
#Increment Integer
i += 1
FuncExample()
print(&amp;#39;--------------------&amp;#39;)
#Functions with Variables #1 - Strings
def FuncVarExample1(fname, lname):
#Print with CRLF
print(&amp;#34;First Name: &amp;#34; + fname + &amp;#34;\r\n&amp;#34; + &amp;#34;Last Name: &amp;#34; + lname)
FuncVarExample1(&amp;#34;Joe&amp;#34;,&amp;#34;Bloggs&amp;#34;)
print(&amp;#39;--------------------&amp;#39;)
#Functions with Variables #2 - Integers + Returning Values
def FuncVarExample2(x, y):
#Basic integer maths
return x+y
#Concatenating Strings and Integers
print(&amp;#34;33 + 42: &amp;#34; + str(FuncVarExample2(33,42)))
print(&amp;#39;--------------------&amp;#39;)
&lt;/code>&lt;/pr</description></item><item><title>Debian 9 - How to upgrade python 3.5 to python 3.7</title><link>https://exitcode0.net/posts/debian-9-how-to-upgrade-python-3-5-to-python-3-7/</link><pubDate>Tue, 19 Feb 2019 18:30:56 +0000</pubDate><guid>https://exitcode0.net/posts/debian-9-how-to-upgrade-python-3-5-to-python-3-7/</guid><description>&lt;p>&lt;img loading="lazy" src="https://i0.wp.com/exitcode0.net/wp-content/uploads/2019/06/Python-Upgrade.png?resize=208%2C208&amp;amp;ssl=1" alt="Python upgrade 3.5 to 3.7" />
I recently spent 30 minutes figuring out how to upgrade to python 3.7 and subsequently pip version on a fresh install of Debian 9. I ran into a number of issues doing this so I though that I would put this quick post together to make this a little bit less complicated for anyone else trying to this.&lt;/p>
&lt;p>This post relates specifically to python version 3.7.3. Although the generic commands should also apply to earlier versions, but your milage may vary.&lt;/p></description></item></channel></rss>