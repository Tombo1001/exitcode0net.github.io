<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Code on ExitCode0</title><link>https://exitcode0.net/tags/code/</link><description>Recent content in Code on ExitCode0</description><generator>Hugo -- 0.128.1</generator><language>en-gb</language><lastBuildDate>Sun, 03 Jan 2021 21:54:45 +0000</lastBuildDate><atom:link href="https://exitcode0.net/tags/code/index.xml" rel="self" type="application/rss+xml"/><item><title>Calculating compound interest with Python 3</title><link>https://exitcode0.net/posts/calculating-compound-interest-with-python-3/</link><pubDate>Sun, 03 Jan 2021 21:54:45 +0000</pubDate><guid>https://exitcode0.net/posts/calculating-compound-interest-with-python-3/</guid><description>Compound stonks only go up! I have a growing interest in finance and analytics, so it felt like a great idea to start creating my own set of financial tools with Python. This article will explain how I created a simple but effective script for calculating compound interest with Python. I wrote this in Python 3 (as all new Python projects should be from now onwards), but the library dependencies are very lightweight, making this something that could easily be re-written from Python 2.</description></item><item><title>How to invoke UAC in a Windows Batch script</title><link>https://exitcode0.net/posts/how-to-invoke-uac-in-a-windows-batch-script/</link><pubDate>Tue, 29 Dec 2020 11:36:25 +0000</pubDate><guid>https://exitcode0.net/posts/how-to-invoke-uac-in-a-windows-batch-script/</guid><description>Here is my quick and easy way to raise the privilage level of a Windows Batch script; allowing you to run your code at an administrator level.
This is not a new question and has been asked many times on StackOverflow forums. The best answer I was able to find was the following from dbenham:
https://stackoverflow.com/questions/1894967/how-to-request-administrator-access-inside-a-batch-file/10052222#10052222
That being said there are many ways to skin this cat, so I came up with my own method, all be it derivative.</description></item><item><title>Copy Paste in vSphere before installing VMware tools</title><link>https://exitcode0.net/posts/copy-paste-in-vsphere-before-installing-vmware-tools/</link><pubDate>Mon, 18 May 2020 18:30:00 +0000</pubDate><guid>https://exitcode0.net/posts/copy-paste-in-vsphere-before-installing-vmware-tools/</guid><description>I’ve spent enough time building VMs in vSphere to know that the first few minutes between starting the VM and getting VMware Tools installed is agonising. Similar to my ‘Copy Paste With Powershell Sendkeys‘ script, I have another tool written in AutoIT which sends defined keyboard strokes to the system. So this is not exactly ‘copy paste in vSphere’, but it achieves the same goal.
If you actually want to enable clipboard sync between host and VM, you can follow this guide here: Enable Copy and Paste Operations Between the Guest Operating System and Remote Console.</description></item><item><title>Python 3 SSH with Paramiko</title><link>https://exitcode0.net/posts/python-3-ssh-with-paramiko/</link><pubDate>Fri, 15 May 2020 18:18:17 +0000</pubDate><guid>https://exitcode0.net/posts/python-3-ssh-with-paramiko/</guid><description>I have a number of projects which I am currently working on which usually involve a raspberry pi and so other TCP enabled object. One project, in particular, is to control a KVM server with buttons connected to a raspberry pi (follow on social media or RSS for that future post). I have been using Python 3 SSH with Paramiko to send commands KVM server from the pi. Here is how I do that…</description></item><item><title>How To: Python infinite loops with while true</title><link>https://exitcode0.net/posts/how-to-python-infinite-loops-with-while-true/</link><pubDate>Tue, 05 May 2020 12:00:00 +0000</pubDate><guid>https://exitcode0.net/posts/how-to-python-infinite-loops-with-while-true/</guid><description>Here is a quick guide on how to create an infinite loop in python using a ‘while true’ statement. There are number of reason that you might want to implement this; a great use case would be outputting a fluctuating variable to the terminal such as a temperature reading from a sensor.
loops that make your brain hurt A ‘while true’ statement allows us to run a sequence of code until a particular condition is met.</description></item><item><title>Prevent Screensavers and Lock-screens with Powershell</title><link>https://exitcode0.net/posts/prevent-screensavers-and-lock-screens-with-powershell/</link><pubDate>Thu, 26 Mar 2020 10:33:06 +0000</pubDate><guid>https://exitcode0.net/posts/prevent-screensavers-and-lock-screens-with-powershell/</guid><description>There might be a number of reasons to want to prevent your windows screensavers and lock-screens from engaging and in some cases (no doubt yours if you have hit this article from a search engine) local policy on the machine preventing you from changing these settings.
Powershell lets us work around this problem and prevent the machine from locking or activating a screensaver.
Prevent Screensavers and Lock-screens The bulk of the code below has been lifted from this great write up: https://dmitrysotnikov.</description></item><item><title>Getting started with Python 3 - a beginner's cheat sheet</title><link>https://exitcode0.net/posts/getting-started-with-python-3-a-beginners-cheat-sheet/</link><pubDate>Sat, 23 Nov 2019 21:13:27 +0000</pubDate><guid>https://exitcode0.net/posts/getting-started-with-python-3-a-beginners-cheat-sheet/</guid><description>Python.Org I have been getting started with python 3 – I want to make this my primary scripting language. One way I like to assist myself whilst I learn the rope is to maintain a crib sheet filled with all the trivial things I would otherwise forget.
Python 3 Cheat Sheet #Define Variables programming_languages: &amp;#34;Python&amp;#34;, &amp;#34;VB&amp;#34;, &amp;#34;C++&amp;#34;, &amp;#34;C#&amp;#34; #Print Variables print(programming_languages) print(&amp;#39;--------------------&amp;#39;) #Basic for loop + variables for language in programming_languages: print(language) print(&amp;#39;--------------------&amp;#39;) #Basic Function def FuncExample(): i: 1 for language in programming_languages: #Concatinate Strings and Integers in print statements print(&amp;#34;Language &amp;#34; + str(i) + &amp;#34;:&amp;#34; + language) #Increment Integer i += 1 FuncExample() print(&amp;#39;--------------------&amp;#39;) #Functions with Variables #1 - Strings def FuncVarExample1(fname, lname): #Print with CRLF print(&amp;#34;First Name: &amp;#34; + fname + &amp;#34;\r\n&amp;#34; + &amp;#34;Last Name: &amp;#34; + lname) FuncVarExample1(&amp;#34;Joe&amp;#34;,&amp;#34;Bloggs&amp;#34;) print(&amp;#39;--------------------&amp;#39;) #Functions with Variables #2 - Integers + Returning Values def FuncVarExample2(x, y): #Basic integer maths return x+y #Concatenating Strings and Integers print(&amp;#34;33 + 42: &amp;#34; + str(FuncVarExample2(33,42))) print(&amp;#39;--------------------&amp;#39;) You can also find more code snippets here: https://exitcode0.</description></item><item><title>Powershell - Checking the Language Mode</title><link>https://exitcode0.net/posts/powershell-checking-the-language-mode/</link><pubDate>Tue, 05 Feb 2019 09:00:49 +0000</pubDate><guid>https://exitcode0.net/posts/powershell-checking-the-language-mode/</guid><description>For security purposes, it is possible to control the language mode in a given Powershell session. These language modes can constrict which modules can be loaded during the life of a powershell session.
Learn mode about Powershell langeuage modes: About Language Modes – Microsoft
Detect the Current Language Mode $sLangMode: $ExecutionContext.SessionState.LanguageMode
If ($sLangMode -ne “FullLanguage”){
Write-Host ” !! Unable to run scrit – Powershell Using Wrong Language Mode !! ”</description></item><item><title>'Copy, Paste' With Powershell Sendkeys</title><link>https://exitcode0.net/posts/copy-paste-with-powershell-sendkeys/</link><pubDate>Sat, 02 Feb 2019 22:17:39 +0000</pubDate><guid>https://exitcode0.net/posts/copy-paste-with-powershell-sendkeys/</guid><description>This is really quick nugget of Powershell for anyone who is struggling to copy and paste into a particular window or dialog box.
Perhaps it is a case of a website which prevents text form being sent to a field from the clipboard, or in my case, a windows UAC prompt. If you are following password best practices, your passwords should be long, complex and contain zero dictionary words. Furthermore, you should have a different password for every site and service.</description></item></channel></rss>