<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>postgres on ExitCode0</title><link>https://exitcode0.net/tags/postgres/</link><description>Recent content in postgres on ExitCode0</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Sat, 06 Jan 2024 12:00:00 +0100</lastBuildDate><atom:link href="https://exitcode0.net/tags/postgres/index.xml" rel="self" type="application/rss+xml"/><item><title>Automating Postgres Deployment with Docker Compose and Init Scripts</title><link>https://exitcode0.net/posts/automating-postgres-deployment/</link><pubDate>Sat, 06 Jan 2024 12:00:00 +0100</pubDate><guid>https://exitcode0.net/posts/automating-postgres-deployment/</guid><description>Introduction to Running PostgreSQL in a Docker Container using Docker Compose In this blog post, we will explore how to run PostgreSQL in a Docker container using Docker Compose. We will also break down and explain the init-user-db.sh script that is executed at startup to initialize the PostgreSQL tables. Running PostgreSQL in a Docker container provides several benefits, including ease of deployment, portability, and isolation. So let&amp;rsquo;s dive in and understand the process!</description></item></channel></rss>