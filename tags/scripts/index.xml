<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>scripts on ExitCode0</title><link>https://exitcode0.net/tags/scripts/</link><description>Recent content in scripts on ExitCode0</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Wed, 13 Feb 2019 09:00:15 +0000</lastBuildDate><atom:link href="https://exitcode0.net/tags/scripts/index.xml" rel="self" type="application/rss+xml"/><item><title>Modifying Windows shortcuts is Powershell</title><link>https://exitcode0.net/posts/modifying-windows-shortcuts-is-powershell/</link><pubDate>Wed, 13 Feb 2019 09:00:15 +0000</pubDate><guid>https://exitcode0.net/posts/modifying-windows-shortcuts-is-powershell/</guid><description>I once faced a rather tedious task that involved recursively modifying a number of shortcut paths stored across a convoluted folder structure. There was approximately 100 shortcuts which needed part of their path modifying.
The answer: Create a****PowerShell script.
The following code utilises regex to check for the existence of a string and modify with the define replacement. It is easily possible to use Read-Host to make this a little bit more interactive, but the purposes of my use-case it was just as simple to modify these variables before running the script.</description></item><item><title>Powershell - Checking the Language Mode</title><link>https://exitcode0.net/posts/powershell-checking-the-language-mode/</link><pubDate>Tue, 05 Feb 2019 09:00:49 +0000</pubDate><guid>https://exitcode0.net/posts/powershell-checking-the-language-mode/</guid><description>For security purposes, it is possible to control the language mode in a given Powershell session. These language modes can constrict which modules can be loaded during the life of a powershell session.
Learn mode about Powershell langeuage modes: About Language Modes – Microsoft
Detect the Current Language Mode $sLangMode: $ExecutionContext.SessionState.LanguageMode
If ($sLangMode -ne “FullLanguage”){
Write-Host ” !! Unable to run scrit – Powershell Using Wrong Language Mode !! ”</description></item><item><title>'Copy, Paste' With Powershell Sendkeys</title><link>https://exitcode0.net/posts/copy-paste-with-powershell-sendkeys/</link><pubDate>Sat, 02 Feb 2019 22:17:39 +0000</pubDate><guid>https://exitcode0.net/posts/copy-paste-with-powershell-sendkeys/</guid><description>This is really quick nugget of Powershell for anyone who is struggling to copy and paste into a particular window or dialog box.
Perhaps it is a case of a website which prevents text form being sent to a field from the clipboard, or in my case, a windows UAC prompt. If you are following password best practices, your passwords should be long, complex and contain zero dictionary words. Furthermore, you should have a different password for every site and service.</description></item></channel></rss>